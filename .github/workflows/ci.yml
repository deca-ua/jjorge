name: pipeline_TDW-02

on:
  schedule:
    - cron: '0 0 * * *' # Executa diariamente à meia-noite
  push:
    branches:
      - '**'
  pull_request:
    branches:
      - '**'

jobs:
  install-dependencies:
    name: Install Dependencies
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Clear npm cache
        run: npm cache clean --force

      - name: Install dependencies
        run: npm install

  run-tests:
    name: Run Tests
    runs-on: ubuntu-latest
    needs: install-dependencies
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install Jest
        run: npm install jest

      - name: Run tests
        run: npm test

  build-project:
    name: Build Project
    runs-on: ubuntu-latest
    needs: run-tests
    if: success()
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install Nuxt.js
        run: npm install nuxt

      - name: Build project
        run: npm run build

  format-code:
    name: Format Code
    runs-on: ubuntu-latest
    needs: build-project
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install Prettier
        run: npm install prettier

      - name: Run Prettier
        run: npx prettier --write .

  deploy-vercel:
    name: Deploy to Vercel
    runs-on: ubuntu-latest
    needs: format-code
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Deploy to Vercel
        run: npx vercel --prod --token ${{ secrets.VERCEL_TOKEN }} --confirm --cwd ./

  webhook-no-sanity:
    name: Webhook no Sanity
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Check for updates
        run: |
          response=$(curl -s -X POST https://jjorge-andrecj2002s-projects.vercel.app/api/webhook)
          echo "$response"
          if echo "$response" | grep -q "Update received"; then
            echo "Update found, running pipeline..."
            
            # Executar o build e deploy se a atualização for detectada
            echo "Running build..."
            npm run build

            echo "Deploying..."
            npm run deploy
          else
            echo "No updates found."
          fi
# Nome que queremos dar ao workflow
name: pipeline_TDW-02

# Eventos que irão disparar o workflow
on:
  push:
    branches:
      - '**'  # Dispara o workflow em pushs para todas as branches
  pull_request:
    branches:
      - '**'  # Dispara o workflow em pull requests para todas as branches

# Definição dos jobs que vão correr em paralelo
jobs:
  install-dependencies:
    name: Install Dependencies
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      # Limpar a cache (opcional)
      - name: Clear npm cache
        run: npm cache clean --force

      # Instalar todas as dependências
      - name: Install dependencies
        run: npm install

  run-tests:
    name: Run Tests
    runs-on: ubuntu-latest
    needs: install-dependencies  # Isto depende de install-dependencies
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      # Instalar Jest
      - name: Install Jest
        run: npm install jest

      # Correr todos os testes automáticos
      - name: Run tests
        run: npm test -- -u 

  build-project:
    name: Build Project
    runs-on: ubuntu-latest
    needs: run-tests  # Isto depende da passagem dos testes
    if: success()  # Só vai se bem sucedido
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          
      # Comando de build para construir o projeto
      - name: Build project
        run: npm run build
